rm(list=ls())
options(scipen=999)
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
rm(list=ls())
options(scipen=999)
rm(list=ls())
options(scipen=999)
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
data <- merge(proc_data, context_data, by="idenpa")
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
data <- merge(proc_data, context_data, by="idenpa")
data <- data %>%
mutate(idenpa = as.character(idenpa)) %>%
mutate(idenpa = case_when(
idenpa == "32" ~ "Argentina",
idenpa == "68" ~ "Bolivia",
idenpa == "76" ~ "Brasil",
idenpa == "152" ~ "Chile",
idenpa == "170" ~ "Colombia",
idenpa == "188" ~ "Costa Rica",
idenpa == "214" ~ "Cuba",
idenpa == "218" ~ "República Dominicana",
idenpa == "222" ~ "Ecuador",
idenpa == "320" ~ "El Salvador",
idenpa == "340" ~ "Guatemala",
idenpa == "484" ~ "Honduras",
idenpa == "558" ~ "México",
idenpa == "591" ~ "Nicaragua",
idenpa == "600" ~ "Panamá",
idenpa == "604" ~ "Paraguay",
idenpa == "858" ~ "Uruguay",
idenpa == "862" ~ "Venezuela"))
data$gdp <- as.numeric(data$gdp)
data$gdp[data$gdp==0] <- NA
data <- na.omit(data)
sjmisc::descr(data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>% # Selecciona estadísticos
kable(.,"markdown") # Esto es para que se vea bien en quarto
view(dfSummary(data, headings=FALSE))
#| label: fig-gdp
#| fig-cap: “Plots”
ggplot(data, aes(x = idenpa, y = gdp)) +
geom_point() +
labs(x = "País", y = "Gdp") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
rm(list=ls())
options(scipen=999)
rm(list=ls())
options(scipen=999)
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
rm(list=ls())
options(scipen=999)
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/latinobarometro_total.RData")) #Cargar base de datos
load(url("https://github.com/Kevin-carrasco/R-data-analisis/raw/main/files/data/data_wvs.RData")) #Cargar base de datos
context_data <- wvs %>% group_by(B_COUNTRY) %>% # Agrupar por país
summarise(gdp = mean(GDPpercap1, na.rm = TRUE), # Promedio de GDP per capita
life_exp = mean(lifeexpect, na.rm = TRUE), # Promedio esperanza de vida
gini = mean(giniWB, na.rm = TRUE)) %>%  # Promedio gini
rename(idenpa=B_COUNTRY) # Para poder vincular ambas bases, es necesario que la variable de identificación se llamen igual
context_data$idenpa <- as.numeric(context_data$idenpa) # Como era categórica, la dejamos numérica
proc_data <- proc_data %>% group_by(idenpa) %>%  # agrupamos por país
summarise(promedio = mean(conf_inst, na.rm = TRUE)) # promedio de confianza en instituciones por país
data <- merge(proc_data, context_data, by="idenpa")
data <- data %>%
mutate(idenpa = as.character(idenpa)) %>%
mutate(idenpa = case_when(
idenpa == "32" ~ "Argentina",
idenpa == "68" ~ "Bolivia",
idenpa == "76" ~ "Brasil",
idenpa == "152" ~ "Chile",
idenpa == "170" ~ "Colombia",
idenpa == "188" ~ "Costa Rica",
idenpa == "214" ~ "Cuba",
idenpa == "218" ~ "República Dominicana",
idenpa == "222" ~ "Ecuador",
idenpa == "320" ~ "El Salvador",
idenpa == "340" ~ "Guatemala",
idenpa == "484" ~ "Honduras",
idenpa == "558" ~ "México",
idenpa == "591" ~ "Nicaragua",
idenpa == "600" ~ "Panamá",
idenpa == "604" ~ "Paraguay",
idenpa == "858" ~ "Uruguay",
idenpa == "862" ~ "Venezuela"))
data$gdp <- as.numeric(data$gdp)
data$gdp[data$gdp==0] <- NA
data <- na.omit(data)
#| label: tbl-sjmisc
#| tbl-cap: “Descriptivos con sjmisc”
sjmisc::descr(data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>% # Selecciona estadísticos
kable(.,"markdown") # Esto es para que se vea bien en quarto
view(dfSummary(data, headings=FALSE))
#| label: fig-gdp
#| fig-cap: “Plots”
ggplot(data, aes(x = idenpa, y = gdp)) +
geom_point() +
labs(x = "País", y = "Gdp") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data_sorted <- data %>% arrange(desc(gdp))
ggplot(data_sorted, aes(x = factor(idenpa, levels = idenpa), y = gdp)) +
geom_point() +
labs(x = "País", y = "GDP") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
data %>%
ggplot(aes(x = gdp, y = promedio, label = idenpa)) +
geom_point() +
geom_text(vjust = -0.5) +
labs(x = "GDP", y = "Promedio") +
theme_bw()
#Ajustes iniciales:
rm(list=ls())
options(scipen=999)
#Base de datos:
datos_CASEN  <- read_dta("Input/Base_CASEN2022/Base de datos Casen 2022 STATA_18 marzo 2024.dta") #para bases de datos de STATA
#Paquetes:
library(pacman)
pacman::p_load(sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
#Base de datos:
datos_CASEN <- read_dta("Input/Base_CASEN2022/Base de datos Casen 2022 STATA_18 marzo 2024.dta")
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
#Base de datos:
datos_CASEN <- read_dta("Input/Base_CASEN2022/Base de datos Casen 2022 STATA_18 marzo 2024.dta")
view(datos_CASEN)
view("datos_CASEN")
view(datos_CASEN)
View(datos_CASEN)
View(datos_CASEN)
View(datos_CASEN)
datos_CASEN_prov_com <-read_dta("Input/Base_CASEN2022Prov_Com/Base de datos provincia y comuna Casen 2022 STATA.dta")
View(datos_CASEN_prov_com)
names(datos_CASEN)
names(datos_CASEN_prov_com)
names(datos_CASEN_prov_com)
View(datos_CASEN_prov_com)
View(datos_CASEN_prov_com)
#Paquetes:
library(pacman)
pacman::p_load(haven,
sjlabelled,
dplyr, #Manipulacion de datos
stargazer, #Tablas
sjmisc, # Tablas
summarytools, # Tablas
kableExtra, #Tablas
sjPlot, #Tablas y gráficos
corrplot, # Correlaciones
sessioninfo, # Información de la sesión de trabajo
ggplot2) # Para la mayoría de los gráficos
View(datos_CASEN)
#Filtramos datos, en este caso nos interesa trabajar con la 8va región.
datos_proc_8va <- datos_CASEN %>%
filter(region==8)
#Agrupamos y etiquetamos:
datos_proc$Ingresos <- (datos_proc$y1 + datos_proc$y3a_preg + datos_proc$y3b_preg + datos_proc$y3c_preg + datos_proc$y3d_preg + datos_proc$y3e_preg + datos_proc$y3f_preg)
#Seleccion de variables: Educación; Salud; Trabajo y seguridad social; Vivienda y entorno; Redes y cohesión social.
datos_proc <- datos_proc_8va %>%
select(e6a_no_asiste, o9a, s13, y1, y3a_preg: y3f_preg, r7a: r7k, v2, v4 , v6, v12, p1:p4)
#Agrupamos y etiquetamos:
datos_proc$Ingresos <- (datos_proc$y1 + datos_proc$y3a_preg + datos_proc$y3b_preg + datos_proc$y3c_preg + datos_proc$y3d_preg + datos_proc$y3e_preg + datos_proc$y3f_preg)
datos_proc$Red_Apoyo <- (datos_proc$r7a + datos_proc$r7b + datos_proc$r7c + datos_proc$r7d + datos_proc$r7e + datos_proc$r7f + datos_proc$r7g + datos_proc$r7h + datos_proc$r7i + datos_proc$r7j + datos_proc$r7k)
datos_proc$Vivienda <- (datos_proc$v2  + datos_proc$v4 + datos_proc$v6 + datos_proc$v12 + datos_proc$p1 + datos_proc$p2 + datos_proc$p3 + datos_proc$p4)
datos_proc$Educacion <- (datos_proc$e6a_no_asiste)
datos_proc$Trabajo <- (datos_proc$o9a)
datos_proc$Salud <- (datos_proc$s13)
#Seleccionamos las variables para losel trabajo:
datos_proc <- datos_proc %>%
select(Ingresos,Red_Apoyo,Vivienda, Educacion, Trabajo, Salud)
##Guardaremos la base de datos procesada para optimizar almacenamiento.
save(datos_proc_8va,file = "input/datos_proc_8va.RData")
frq(datos_proc_8va)
##Guardamos para optimizar espacio:
save(datos_proc,file = "input/DATA.RData")
#Ajustes iniciales:
rm(list=ls())
###Base optimizada
load(file = "Input/DATA.RData")
###Base optimizada
DATA <- load(file = "Input/DATA.RData")
#Ajustes iniciales:
rm(list=ls())
###Base optimizada
DATA <- load(file = "Input/DATA.RData")
#Ajustes iniciales:
rm(list=ls())
###Base optimizada
load(file = "Input/DATA.RData")
View(datos_proc)
